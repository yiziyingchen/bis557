library(bis557)
data("ridge_train")
data("ridge_test")
form = y ~. - 1
X = model.matrix(form, ridge_train)
#colnames(X)[0] <- c("Intercept", "X1", "X2")
#Y= model.frame(formula,ridge_train)[,1]
matrix <- t(X) %*% X
#duv <- svd(X)
duv <- svd(X)
d = 1/duv$d
# the range of d is around 10^-2 to 10^1
lambda_log0 = ceiling(log(range(d), base = 10))
log_lambda = seq((lambda_log0+ c(-2,2))[1],(lambda_log0+ c(-2,2))[2], 0.1)
lam = 10^log_lambda
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
mse_ridge_resid(form, lambda, ridge_train, ridge_test)
library(bis557)
data("ridge_train")
data("ridge_test")
form = y ~. - 1
X = model.matrix(form, ridge_train)
#colnames(X)[0] <- c("Intercept", "X1", "X2")
#Y= model.frame(formula,ridge_train)[,1]
matrix <- t(X) %*% X
#duv <- svd(X)
duv <- svd(X)
d = 1/duv$d
# the range of d is around 10^-2 to 10^1
lambda_log0 = ceiling(log(range(d), base = 10))
log_lambda = seq((lambda_log0+ c(-2,2))[1],(lambda_log0+ c(-2,2))[2], 0.1)
lam = 10^log_lambda
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
mse_ridge_resid(form, lam, ridge_train, ridge_test)
mse_test =  vapply(lam, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
library(bis557)
data("ridge_train")
data("ridge_test")
form = y ~. - 1
X = model.matrix(form, ridge_train)
#colnames(X)[0] <- c("Intercept", "X1", "X2")
#Y= model.frame(formula,ridge_train)[,1]
matrix <- t(X) %*% X
#duv <- svd(X)
duv <- svd(X)
d = 1/duv$d
# the range of d is around 10^-2 to 10^1
lambda_log0 = ceiling(log(range(d), base = 10))
log_lambda = seq((lambda_log0+ c(-2,2))[1],(lambda_log0+ c(-2,2))[2], 0.1)
lam = 10^log_lambda
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda, mse_test)
plot(log_lambda, mse_test, xlim = c(1,2))
log_lambda[which.min(mse_test)]
log_lambda1 = seq(1,2, 0.01)
lam1 = 10^log_lambda1
mse_test1 =  vapply(lam1, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda1, mse_test1)
log_lambda1[which.min(mse_test1)]
log_lambda2 = seq(1.4,1.6, 0.001)
lam2 = 10^log_lambda2
mse_test2 =  vapply(lam2, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda2, mse_test2)
log_lambda2[which.min(mse_test2)]
check()
test()
check()
fit = ridge_reg(Sepal.Length, 2, iris)
fit = ridge_reg(Sepal.Length~., 2, iris)
check()
check()
check()
lm_patho <- read.csv("df.csv")
dir.create("../data")
save(lm_patho, file = "../data/lm_patho.rda")
ridge_test <- read.csv("/Users/yiziyingchen/Desktop/bis557/data-raw/ridge_test.csv")
ridge_train <- read.csv("/Users/yiziyingchen/Desktop/bis557/data-raw/ridge_train.csv")
save(ridge_train, file = "/Users/yiziyingchen/Desktop/bis557/data/ridge_train.rda")
save(ridge_test, file = "/Users/yiziyingchen/Desktop/bis557/data/ridge_test.rda")
lm_patho <- read.csv("df.csv")
dir.create("../data")
save(lm_patho, file = "../data/lm_patho.rda")
lm_patho <- read.csv("df.csv")
dir.create("/Users/yiziyingchen/Desktop/bis557/data")
save(lm_patho, file = "/Users/yiziyingchen/Desktop/bis557/data/lm_patho.rda")
ridge_test <- read.csv("/Users/yiziyingchen/Desktop/bis557/data-raw/ridge_test.csv")
ridge_train <- read.csv("/Users/yiziyingchen/Desktop/bis557/data-raw/ridge_train.csv")
save(ridge_train, file = "/Users/yiziyingchen/Desktop/bis557/data/ridge_train.rda")
save(ridge_test, file = "/Users/yiziyingchen/Desktop/bis557/data/ridge_test.rda")
lm_patho <- read.csv("/Users/yiziyingchen/Desktop/bis557/data-raw/df.csv")
dir.create("/Users/yiziyingchen/Desktop/bis557/data")
save(lm_patho, file = "/Users/yiziyingchen/Desktop/bis557/data/lm_patho.rda")
ridge_test <- read.csv("/Users/yiziyingchen/Desktop/bis557/data-raw/ridge_test.csv")
ridge_train <- read.csv("/Users/yiziyingchen/Desktop/bis557/data-raw/ridge_train.csv")
save(ridge_train, file = "/Users/yiziyingchen/Desktop/bis557/data/ridge_train.rda")
save(ridge_test, file = "/Users/yiziyingchen/Desktop/bis557/data/ridge_test.rda")
check()
X = model.matrix(form, ridge_train)
matrix <- t(X) %*% X
duv <- svd(matrix)
d = 1/duv$d
lambda_log0 = ceiling(log(range(d), base = 10))
lambda_log0
X = model.matrix(form, ridge_train)
matrix <- t(X) %*% X
duv <- svd(matrix)
d = 1/duv$d
#range of singular value appears to be around 10^-2 to 10^1
lambda_log0 = ceiling(log(range(d), base = 10))
# extend the range with 10^2 fold to increase the
log_lambda = seq((lambda_log0+ c(-2,2))[1],(lambda_log0+ c(-2,2))[2], 0.1)
lam = 10^log_lambda
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda, mse_test)
plot(log_lambda, mse_test, xlim = c(1,2))
log_lambda[which.min(mse_test)]
log_lambda1 = seq(1,2, 0.01)
lam1 = 10^log_lambda1
mse_test1 =  vapply(lam1, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda1, mse_test1)
log_lambda1[which.min(mse_test1)]
log_lambda2 = seq(1.4,1.6, 0.001)
lam2 = 10^log_lambda2
mse_test2 =  vapply(lam2, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda2, mse_test2)
log_lambda2[which.min(mse_test2)]
matrix
X
svd(matrix)
svd(X)
?seq
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda, mse_test)
plot(log_lambda, mse_test, xlim = c(1,2))
log_lambda[which.min(mse_test)]
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda, mse_test)
plot(log_lambda, mse_test, xlim = c(1,2))
log_lambda[which.min(mse_test)]
# install the "bis557" library
library(bis557)
#get 2 datafiles, train and test
data("ridge_train")
data("ridge_test")
# define the formula
form = y ~. - 1
X = model.matrix(form, ridge_train)
matrix <- t(X) %*% X
duv <- svd(X)
d = 1/duv$d
lambda_log0 = ceiling(log(range(d), base = 10))
log_lambda = seq((lambda_log0+ c(-2,2))[1],(lambda_log0+ c(-2,2))[2], 0.1)
lam = 10^log_lambda
X = model.matrix(form, ridge_train)
matrix <- t(X) %*% X
duv <- svd(X)
d = 1/duv$d
lambda_log = ceiling(log(range(d), base = 10))
log_lambda = seq((lambda_log+ c(-2,2))[1],(lambda_log+ c(-2,2))[2], 0.1)
lam = 10^log_lambda
log_lambda0 = seq((lambda_log+ c(-2,2))[1],(lambda_log+ c(-2,2))[2], 0.1)
lam = 10^log_lambda0
log_lambda0 = seq((lambda_log+ c(-2,2))[1],(lambda_log+ c(-2,2))[2], 0.1)
lam0 = 10^log_lambda0
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam0, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda0, mse_test)
plot(log_lambda0, mse_test, xlim = c(1,2))
log_lambda0[which.min(mse_test)]
mse_ridge_resid = function(form, lambda, dattrain, dattest){
m = model.matrix(form, dattest)
y = matrix(dattest[,as.character(form)[2]], ncol = 1)
y = y[as.numeric(rownames(m)),,drop = FALSE]
beta = ridge_reg(form, lambda, dattrain)$coefficients
yhat = m %*% beta
mean((y - yhat)^2)
}
mse_test =  vapply(lam0, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda0, mse_test)
log_lambda1 = seq(1,2, 0.01)
lam1 = 10^log_lambda1
mse_test1 =  vapply(lam1, function(x) mse_ridge_resid(form, x, ridge_train, ridge_test), as.numeric(NA))
plot(log_lambda1, mse_test1)
log_lambda1[which.min(mse_test1)]
install()
check()
test()
